name: deploy server
on:
  repository_dispatch:
    types: [deploy]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: run scripts
        if: ${{ !(github.event.client_payload.runScripts.run == '') }}
        run: ${{ github.event.client_payload.runScripts.run }}

      - name: prewrite
        if: ${{ !(github.event.client_payload.prewrite.content == '') }}
        uses: DamianReeves/write-file-action@master
        with:
          path: ${{ github.event.client_payload.prewrite.file }}
          contents: ${{ github.event.client_payload.prewrite.content }}
          write-mode: overwrite

      - name: prebuild
        if: ${{ !(github.event.client_payload.prebuild == '') }}
        run: ${{ github.event.client_payload.prebuild }}
        working-directory: server/nuxt3
        env:
          CLOUDFLARE_API_TOKEN: ${{ github.event.client_payload.clitoken }}
          NETLIFY_AUTH_TOKEN: ${{ github.event.client_payload.clitoken }}
          NETLIFY_SITE_ID: ${{ github.event.client_payload.siteid }}
          KV_REST_API_URL: ${{ github.event.client_payload.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ github.event.client_payload.KV_REST_API_TOKEN }}

      - name: deploy server
        run: ${{ github.event.client_payload.build }}
        working-directory: server/nuxt3
        env:
          CLOUDFLARE_API_TOKEN: ${{ github.event.client_payload.clitoken }}
          NETLIFY_AUTH_TOKEN: ${{ github.event.client_payload.clitoken }}
          NETLIFY_SITE_ID: ${{ github.event.client_payload.siteid }}
          KV_REST_API_URL: ${{ github.event.client_payload.KV_REST_API_URL }}
          KV_REST_API_TOKEN: ${{ github.event.client_payload.KV_REST_API_TOKEN }}
